Index: film.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <stdbool.h>\r\n#include \"film.h\"\r\n\r\n// crée un film avec les données en paramètre.\r\nstruct Film* createFilm(char title[MAXTITLE], char type[MAXTYPE], int time){\r\n    struct Film* f = malloc(sizeof (struct Film));\r\n    if(f != NULL){\r\n        strcpy(f->title, title);\r\n        strcpy(f->type, type);\r\n        f->time = time;\r\n        f->next = NULL;\r\n    }\r\n    return f;\r\n}\r\n\r\n// ajoute un film données en paramètre à la suite.\r\nstruct Film* addFilm(struct Film* f, char title[MAXTITLE], char type[MAXTYPE], int time){\r\n    if(f == NULL){\r\n        return createFilm(title, type, time);\r\n    }\r\n    else {\r\n        struct Film* iter = f;\r\n        while(f->next != NULL){\r\n            iter = iter->next;\r\n        }\r\n        f->next = createFilm(title, type, time);\r\n        return f;\r\n    }\r\n}\r\n\r\n// Renvoie le film suivant\r\nstruct Film* getNext(struct Film* f){\r\n    return f->next;\r\n}\r\n\r\n// Renvoie le titre du film\r\nchar* getTitle(struct Film* f){\r\n    return f->title;\r\n}\r\n\r\n// Renvoie le type du film\r\nchar* getType(struct Film* f){\r\n    return f->type;\r\n}\r\n\r\n// Renvoie le temps du film\r\nint getTime(struct Film* f){\r\n    return f->time;\r\n}\r\n\r\n// Renvoie le premier film avec le titre recherché\r\nstruct Film* getFilmByTitle(struct Film* f, char title[MAXTITLE]){\r\n    if(f != NULL){\r\n        struct Film* iter = f;\r\n        if(strcmp(getTitle(iter), title) == 0){\r\n            return iter;\r\n        }\r\n        while(getNext(f) != NULL){\r\n            iter = getNext(iter);\r\n            if(strcmp(getTitle(iter), title) == 0){\r\n                return iter;\r\n            }\r\n        }\r\n    }\r\n    return NULL;\r\n}\r\n\r\n// Renvoie le premier film avec le type recherché\r\nstruct Film* getFilmByType(struct Film f, char type[MAXTYPE]){\r\n\r\n}\r\n\r\n// Suprime le premier film\r\nvoid deleteFirst(struct Film* f){\r\n\r\n}\r\n\r\n// Suprime tous les films\r\nvoid deleteFilm(struct Film* f){\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/film.c b/film.c
--- a/film.c	(revision f2cb5273144e4c5a01537bf15adb83def8162451)
+++ b/film.c	(date 1686302750017)
@@ -70,7 +70,19 @@
 
 // Renvoie le premier film avec le type recherché
 struct Film* getFilmByType(struct Film f, char type[MAXTYPE]){
-
+    if(f != NULL){
+        struct Film* iter = f;
+        if(strcmp(getType(iter), type) == 0){
+            return iter;
+        }
+        while(getNext(f) != NULL){
+            iter = getNext(iter);
+            if(strcmp(getTitle(iter), title) == 0){
+                return iter;
+            }
+        }
+    }
+    return NULL;
 }
 
 // Suprime le premier film
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakePresetLoader\">{\r\n  &quot;useNewFormat&quot;: true\r\n}</component>\r\n  <component name=\"CMakeReloadState\">\r\n    <option name=\"reloaded\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated>\r\n      <config projectName=\"c\" targetName=\"c\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"98986d9e-6e12-4312-9b46-9dd440afb589\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2022\" />\r\n    <option name=\"minorVersion\" value=\"3\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QvN53nqR7L5EmhUaW5inZAdgjf\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"c\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"c\" TARGET_NAME=\"c\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"c\" RUN_TARGET_NAME=\"c\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"98986d9e-6e12-4312-9b46-9dd440afb589\" name=\"Changes\" comment=\"\" />\r\n      <created>1686229909137</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1686229909137</updated>\r\n      <workItem from=\"1686229910743\" duration=\"1725000\" />\r\n      <workItem from=\"1686231659670\" duration=\"1000\" />\r\n      <workItem from=\"1686294051014\" duration=\"7634000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f2cb5273144e4c5a01537bf15adb83def8162451)
+++ b/.idea/workspace.xml	(date 1686302996218)
@@ -20,7 +20,13 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="98986d9e-6e12-4312-9b46-9dd440afb589" name="Changes" comment="" />
+    <list default="true" id="98986d9e-6e12-4312-9b46-9dd440afb589" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/film.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/film.c.o" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/main.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/main.c.o" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/c" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/film.c" beforeDir="false" afterPath="$PROJECT_DIR$/film.c" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -83,11 +89,22 @@
       <updated>1686229909137</updated>
       <workItem from="1686229910743" duration="1725000" />
       <workItem from="1686231659670" duration="1000" />
-      <workItem from="1686294051014" duration="7634000" />
+      <workItem from="1686294051014" duration="8673000" />
     </task>
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
 </project>
\ No newline at end of file
