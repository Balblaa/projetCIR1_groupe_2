Index: Realisateur.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"realisateur.h\"\r\n\r\n//  Créer le premier noeud\r\nstruct Realisateur* createEmptyRealisateur(){\r\n    struct Realisateur* r = malloc(sizeof (struct Realisateur));\r\n    if(r != NULL){\r\n        r->isRealisateur = false;\r\n        for(int i=0; i<NBLETTRE; i++){\r\n            r->lettre[i] = NULL;\r\n        }\r\n        r->film = NULL;\r\n        r->longestFilm = 0;\r\n    }\r\n    return r;\r\n}\r\n\r\n// Renvoie la liste de tout les enfants de réalisateur\r\nstruct Realisateur** getChidren(struct Realisateur* r){\r\n    return r->lettre;\r\n}\r\n\r\n// Renvoie si un réalisateur est vide\r\nbool isRealisateurEmpty(struct Realisateur* r){\r\n    for(int i = 0; i<NBLETTRE; i++){\r\n        if(getChidren(r)[i] != NULL){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// Renvoie la liste des films du réalisateur\r\nstruct Film* getFilm(struct Realisateur* r){\r\n    return r->film;\r\n}\r\n\r\n// Renvoie le la liste de film d'un realisateur\r\nstruct Realisateur* findRealisateur(struct Realisateur* r, char* realisateur){\r\n    int n = strlen(realisateur);\r\n    for(int i=0; i<n; i++){\r\n\r\n        // 44 représente le caractère \"'\"\r\n        if(realisateur[i] - '\\'' == 0 && r->lettre[NBLETTRE-3] != NULL){\r\n            r = r->lettre[NBLETTRE-3];\r\n        }\r\n        else if(realisateur[i]-' ' == 0 && r->lettre[NBLETTRE-2] != NULL){\r\n            r = r->lettre[NBLETTRE-2];\r\n        }\r\n        else if(realisateur[i]-'-' == 0 && r->lettre[NBLETTRE-1] != NULL){\r\n            r = r->lettre[NBLETTRE-1];\r\n        }\r\n        else if(r->lettre[realisateur[i]-'a'] != NULL){\r\n            r = r->lettre[realisateur[i]-'a'];\r\n            }\r\n        else {\r\n            return NULL;\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\n// rajoute un réalisateur dans l'arbre et le renvoie\r\nstruct Realisateur* insertRealisateur(struct Realisateur* r, char* realisateur){\r\n\r\n    // Obtenir la longueur du nom de du réalisateur\r\n    int n = strlen(realisateur);\r\n\r\n    // Pour chaque lettre du nom du réalisateur on regarde la destination\r\n    for(int i=0; i<n; i++){\r\n\r\n\r\n        // On traite d'abord le caractère spécial: \"'\"\r\n        if (realisateur[i]- '\\'' == 0){\r\n\r\n            // On vérifie si l'emplacement existe\r\n            if(r->lettre[NBLETTRE-3] != NULL){\r\n                // Si oui, on se déplace dans la nouvelle \"lettre\" pour trouvé notre destination\r\n                r = r->lettre[NBLETTRE-3];\r\n            }\r\n            else {\r\n                // Si non, on la créer puis on continue de la même manière\r\n                r->lettre[NBLETTRE-3] = createEmptyRealisateur();\r\n                r = r->lettre[NBLETTRE-3];\r\n            }\r\n        }\r\n        // On traite d'abord le caractère spécial: \" \"\r\n        else if (realisateur[i]-' ' == 0){\r\n\r\n            // On vérifie si l'emplacement existe\r\n            if(r->lettre[NBLETTRE-2] != NULL){\r\n                // Si oui, on se déplace dans la nouvelle \"lettre\" pour trouvé notre destination\r\n                r = r->lettre[NBLETTRE-2];\r\n            }\r\n            else {\r\n                // Si non, on la créer puis on continue de la même manière\r\n                r->lettre[NBLETTRE-2] = createEmptyRealisateur();\r\n                r = r->lettre[NBLETTRE-2];\r\n            }\r\n        }\r\n        // Si se n'est pas un \" \" alors c'est peut être un \"-\"\r\n        else if (realisateur[i]-'-' == 0){\r\n\r\n            // On vérifie si l'emplacement existe\r\n            if(r->lettre[NBLETTRE-1] != NULL){\r\n                // Si oui, on se déplace dans la nouvelle \"lettre\" pour trouvé notre destination\r\n                r = r->lettre[NBLETTRE-1];\r\n            }\r\n            else {\r\n                // Si non, on la créer puis on continue de la même manière\r\n                r->lettre[NBLETTRE-1] = createEmptyRealisateur();\r\n                r = r->lettre[NBLETTRE-1];\r\n            }\r\n        }\r\n        // Si se n'est pas un \"-\" alors c'est une lettre\r\n        else {\r\n\r\n            // Et l'on fera la même méthode que précédemment\r\n            if(r->lettre[realisateur[i]-'a'] != NULL){\r\n                r = r->lettre[realisateur[i]-'a'];\r\n            }\r\n            else {\r\n                r->lettre[realisateur[i]-'a'] = createEmptyRealisateur();\r\n                r = r->lettre[realisateur[i]-'a'];\r\n            }\r\n        }\r\n    }\r\n\r\n    // Une fois à la position de la dernière lettre du réalisateur, on met la vérification du réalisateur a true\r\n    r->isRealisateur = true;\r\n    return r;\r\n}\r\n\r\n// rajoute un film au réalisateur donné\r\nvoid insertFilm(struct Realisateur* r, struct Film* f){\r\n    char* realisateur = getAuthor(f);\r\n    if(isRealisateurExist(r, realisateur)){\r\n        r = findRealisateur(r, realisateur);\r\n        r->film = addFilm(r->film, f);\r\n    }\r\n    else {\r\n        r = insertRealisateur(r, realisateur);\r\n        r->film = addFilm(r->film, f);\r\n    }\r\n}\r\n\r\n// suprime un film avec son titre et son auteur\r\nvoid deleteFilmFromRealisateur(struct Realisateur* r, char* realisateur, char* title){\r\n    r = findRealisateur(r, realisateur);\r\n    deleteFilmByTitle(r->film, title);\r\n}\r\n\r\n// Renvoie si la cellule est un réalisateur ou non\r\nbool isRealisateur(struct Realisateur* r){\r\n    return r->isRealisateur;\r\n}\r\n\r\n// Vérifie qu'un réalisateur existe\r\nbool isRealisateurExist(struct Realisateur* r,char* realisateur){\r\n    int n = strlen(realisateur);\r\n    for(int i=0; i<n; i++){\r\n        if(realisateur[i]- '\\'' == 0){\r\n            if(r->lettre[NBLETTRE-3] == NULL){\r\n                return false;\r\n            }\r\n            r = r->lettre[NBLETTRE-3];\r\n        }\r\n        else if(realisateur[i]-' ' == 0){\r\n            if(r->lettre[NBLETTRE-2] == NULL){\r\n                return false;\r\n            }\r\n            r = r->lettre[NBLETTRE-2];\r\n        }\r\n        else if(realisateur[i]-'-' == 0){\r\n            if(r->lettre[NBLETTRE-1] == NULL){\r\n                return false;\r\n            }\r\n            r = r->lettre[NBLETTRE-1];\r\n        }\r\n        else {\r\n            if (r->lettre[realisateur[i] - 'a'] == NULL) {\r\n                return false;\r\n            }\r\n            r = r->lettre[realisateur[i] - 'a'];\r\n        }\r\n    }\r\n    return r->isRealisateur;\r\n}\r\n\r\n// Affiche les réalisateur\r\nvoid displayRealisateurs(struct Realisateur* r, char* realisateur, int index){\r\n    if(isRealisateur(r)){\r\n        realisateur[index] = '\\0';\r\n        printf(\"%s\\n\", realisateur);\r\n    }\r\n    for(int i=0; i<NBLETTRE; i++){\r\n        if(getChidren(r)[i] != NULL){\r\n            if(i == NBLETTRE-3){\r\n                realisateur[index] = '\\'';\r\n            }\r\n            else if(i == NBLETTRE-2){\r\n                realisateur[index] = ' ';\r\n            }\r\n            else if(i == NBLETTRE-1){\r\n                realisateur[index] = '-';\r\n            }\r\n            else {\r\n                realisateur[index] = 'a' + i;\r\n            }\r\n            displayRealisateurs(getChidren(r)[i], realisateur, index+1);\r\n        }\r\n    }\r\n}\r\n\r\n// suprime tous les réalisateurs\r\nvoid deleteRealisateurs(struct Realisateur** r){\r\n    if(isRealisateur(*r)){\r\n        deleteFilms(&(*r)->film);\r\n    }\r\n    if(isRealisateurEmpty(*r)){\r\n        free(*r);\r\n        *r = NULL;\r\n    }\r\n    else {\r\n        for (int i = 0; i < NBLETTRE; i++) {\r\n            if (getChidren(*r)[i] != NULL) {\r\n                deleteRealisateurs(&(*r)->lettre[i]);\r\n            }\r\n        }\r\n        free(*r);\r\n        *r = NULL;\r\n    }\r\n}\r\n\r\n// Construie un arbre avec les réalisateur ainsi que les film a partir d'un txt\r\nstruct Realisateur* buildRealisateurFromtxt(char* nomfichier){\r\n\r\n    FILE* fichier;\r\n    fichier = fopen(nomfichier, \"r\");\r\n\r\n    struct Realisateur* r = createEmptyRealisateur();\r\n\r\n    char realisateur[MAXAUTHOR];\r\n    char title[MAXTITLE];\r\n    char type[MAXTYPE];\r\n    char time[3];\r\n    int counter = 0;\r\n    int index = 0;\r\n\r\n    while(!feof(fichier)) {\r\n        char c = fgetc(fichier);\r\n        if (c == '\\n') {\r\n            type[index-1] = '\\0';\r\n            struct Film* f = createFilm(title, type, realisateur, atoi(time));\r\n            insertFilm(r, f);\r\n            counter = 0;\r\n            index = 0;\r\n        }\r\n        else if (c == ';') {\r\n            switch (counter) {\r\n                case 0:\r\n                    realisateur[index] = '\\0';\r\n                    counter++;\r\n                    index = 0;\r\n                    break;\r\n                case 1:\r\n                    title[index] = '\\0';\r\n                    counter++;\r\n                    index = 0;\r\n                    break;\r\n                case 2:\r\n                    time[index] = '\\0';\r\n                    counter++;\r\n                    index = 0;\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (counter) {\r\n                case 0:\r\n                    if(c >= 'A' && c <= 'Z'){\r\n                        realisateur[index] = c + 32;\r\n                    }\r\n                    else {\r\n                        realisateur[index] = c;\r\n                    }\r\n                    index++;\r\n                    break;\r\n                case 1:\r\n                    title[index] = c;\r\n                    index++;\r\n                    break;\r\n                case 2:\r\n                    time[index] = c;\r\n                    index++;\r\n                    break;\r\n                case 3:\r\n                    type[index] = c;\r\n                    index++;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    fclose(fichier);\r\n    return r;\r\n}\r\n\r\n// renvoie le realisateur avec le plus de film\r\nstruct Realisateur* bestRealisateur(struct Realisateur* r){\r\n\r\n    int max = 0;\r\n    struct Realisateur* best = NULL;\r\n\r\n    if(isRealisateur(r)){\r\n        max = r->film->size;\r\n        best = r;\r\n    }\r\n    for(int i=0; i<NBLETTRE; i++){\r\n        if(r->lettre[i] != NULL){\r\n            struct Realisateur* temp = bestRealisateur(r->lettre[i]);\r\n            if(temp->film->size > max){\r\n                max = temp->film->size;\r\n                best = temp;\r\n            }\r\n        }\r\n    }\r\n    return best;\r\n}\r\n\r\n// Renvoie la durée du plus long film\r\nint findlongestFilm(struct Realisateur* r){\r\n    int max = 0;\r\n\r\n    if(isRealisateur(r)){\r\n        max = longestFilm(r->film);\r\n    }\r\n    for(int i=0; i<NBLETTRE; i++){\r\n        if(r->lettre[i] != NULL){\r\n            int newTime = findlongestFilm(r->lettre[i]);\r\n            if(newTime > max){\r\n                max = newTime;\r\n            }\r\n        }\r\n    }\r\n    return max;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Realisateur.c b/Realisateur.c
--- a/Realisateur.c	(revision fbb4d16666e8e3439c3abeaa0afb61678928d6e0)
+++ b/Realisateur.c	(date 1686520915884)
@@ -186,7 +186,7 @@
     return r->isRealisateur;
 }
 
-// Affiche les réalisateur
+// Affiche les réalisateurs
 void displayRealisateurs(struct Realisateur* r, char* realisateur, int index){
     if(isRealisateur(r)){
         realisateur[index] = '\0';
@@ -231,7 +231,7 @@
     }
 }
 
-// Construie un arbre avec les réalisateur ainsi que les film a partir d'un txt
+// Construie un arbre avec les réalisateurs ainsi que les films à partir d'un txt
 struct Realisateur* buildRealisateurFromtxt(char* nomfichier){
 
     FILE* fichier;
Index: main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"film.h\"\r\n#include \"realisateur.h\"\r\n#include \"filmotheque.h\"\r\n\r\nint main() {\r\n\r\n    struct Filmotheque* ft = createFilmotheque(\"../../../BD_medium.txt\");\r\n\r\n    printFilmotheque(ft);\r\n    printFilm(getFilmByListChrono(ft, 341));\r\n    deleteFilmothque(&ft);\r\n\r\n\r\n    /*\r\n    FILE* fichier;\r\n    fichier = fopen(\"../../html/result.txt\", \"w\");\r\n    char texte[MAXAUTHOR + MAXTITLE + MAXTYPE] = \"bien le bonsoir\\n\";\r\n    fputs(texte, fichier);\r\n\r\n    fclose(fichier);*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.c b/main.c
--- a/main.c	(revision fbb4d16666e8e3439c3abeaa0afb61678928d6e0)
+++ b/main.c	(date 1686553641066)
@@ -1,13 +1,11 @@
 #include "film.h"
-#include "realisateur.h"
 #include "filmotheque.h"
 
 int main() {
 
-    struct Filmotheque* ft = createFilmotheque("../../../BD_medium.txt");
+    struct Filmotheque* ft = createFilmotheque("../../BD_medium.txt");
 
     printFilmotheque(ft);
-    printFilm(getFilmByListChrono(ft, 341));
     deleteFilmothque(&ft);
 
 
Index: cmake-build-debug/CMakeFiles/c.dir/C.includecache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#IncludeRegexLine: ^[ \t]*#[ \t]*(include|import)[ \t]*[<\"]([^\">]+)([\">])\r\n\r\n#IncludeRegexScan: ^.*$\r\n\r\n#IncludeRegexComplain: ^$\r\n\r\n#IncludeRegexTransform: \r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.c\r\nstdio.h\r\n-\r\nstdlib.h\r\n-\r\nstring.h\r\n-\r\nstdbool.h\r\n-\r\nfilm.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\nstdio.h\r\n-\r\nstdlib.h\r\n-\r\nstring.h\r\n-\r\nstdbool.h\r\n-\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/filmotheque.c\r\nrealisateur.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.h\r\nfilmotheque.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/filmotheque.h\r\nfilm.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/filmotheque.h\r\nstdio.h\r\n-\r\nstdlib.h\r\n-\r\nstring.h\r\n-\r\nstdbool.h\r\n-\r\nrealisateur.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.h\r\nlistChrono.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/listChrono.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/listChrono.c\r\nlistChrono.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/listChrono.h\r\nfilm.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/listChrono.h\r\nfilm.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/main.c\r\nfilm.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\nrealisateur.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.h\r\nfilmotheque.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/filmotheque.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.c\r\nrealisateur.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.h\r\n\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.h\r\nstdio.h\r\n-\r\nstdlib.h\r\n-\r\nstring.h\r\n-\r\nstdbool.h\r\n-\r\nfilm.h\r\n/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/c.dir/C.includecache b/cmake-build-debug/CMakeFiles/c.dir/C.includecache
--- a/cmake-build-debug/CMakeFiles/c.dir/C.includecache	(revision fbb4d16666e8e3439c3abeaa0afb61678928d6e0)
+++ b/cmake-build-debug/CMakeFiles/c.dir/C.includecache	(date 1686520781788)
@@ -63,8 +63,6 @@
 /mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/main.c
 film.h
 /mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/film.h
-realisateur.h
-/mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/realisateur.h
 filmotheque.h
 /mnt/c/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c/filmotheque.h
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakePresetLoader\">{\r\n  &quot;useNewFormat&quot;: true\r\n}</component>\r\n  <component name=\"CMakeReloadState\">\r\n    <option name=\"reloaded\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated>\r\n      <config projectName=\"c\" targetName=\"c\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"98986d9e-6e12-4312-9b46-9dd440afb589\" name=\"Changes\" comment=\"début list chrono\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/C.includecache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/C.includecache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.internal\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.internal\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.make\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.make\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/filmotheque.c.o\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/filmotheque.c.o\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/main.c.o\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/main.c.o\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/c\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/filmotheque.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/filmotheque.c\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/filmotheque.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/filmotheque.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/listChrono.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/listChrono.c\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/listChrono.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/listChrono.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.c\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"874361c1-a23a-468e-94c7-94b243c61f8f\" />\r\n        <option name=\"url\" value=\"https://github.com/Balblaa/projetCIR1_groupe_2.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2022\" />\r\n    <option name=\"minorVersion\" value=\"3\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QvN53nqR7L5EmhUaW5inZAdgjf\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/vdron/Documents/Travail/algo/pratique/TP7_Dronne\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"structure.view.defaults.are.configured\": \"true\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"CMake Application.c\">\r\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"c\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"c\" TARGET_NAME=\"c\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"c\" RUN_TARGET_NAME=\"c\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main.c\" type=\"CppFileRunConfiguration\" factoryName=\"CppFileRunConfiguration\" temporary=\"true\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"c\" TARGET_NAME=\"main.c\" CONFIG_NAME=\"main.c\">\r\n      <option name=\"sourceFile\" value=\"C:\\Users\\vdron\\Documents\\Travail\\algo\\pratique\\TP14_Dronne\\main.c\" />\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.cpp.runfile.CppFileBuildBeforeRunTaskProvider$BasicBuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"C/C++ File.main.c\" />\r\n      <item itemvalue=\"CMake Application.c\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"C/C++ File.main.c\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"98986d9e-6e12-4312-9b46-9dd440afb589\" name=\"Changes\" comment=\"\" />\r\n      <created>1686229909137</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1686229909137</updated>\r\n      <workItem from=\"1686229910743\" duration=\"1725000\" />\r\n      <workItem from=\"1686231659670\" duration=\"1000\" />\r\n      <workItem from=\"1686294051014\" duration=\"7634000\" />\r\n      <workItem from=\"1686323680107\" duration=\"304000\" />\r\n      <workItem from=\"1686325376605\" duration=\"16076000\" />\r\n      <workItem from=\"1686405910188\" duration=\"4339000\" />\r\n      <workItem from=\"1686411048468\" duration=\"14432000\" />\r\n      <workItem from=\"1686440869031\" duration=\"3179000\" />\r\n      <workItem from=\"1686477818245\" duration=\"34136000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"fin de film\">\r\n      <created>1686303808802</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686303808802</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"mise a jour des .h\">\r\n      <created>1686312467548</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686312467548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"beginning realisateur.c\">\r\n      <created>1686314504222</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686314504222</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"ajout de printFilm dans film.h / .c\">\r\n      <created>1686315508289</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686315508289</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"msj\">\r\n      <created>1686315563670</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686315563670</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"correction addFirst film.c\">\r\n      <created>1686318068140</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686318068140</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"correction addFirst film.c\">\r\n      <created>1686318347036</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686318347036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"correction addFirst film.c\">\r\n      <created>1686319210418</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686319210418</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"fin correction de film.c\">\r\n      <created>1686320988298</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686320988298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"brouillons realisateur\">\r\n      <created>1686400807015</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686400807015</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fonction realisateur propre, changement de la structure film\">\r\n      <created>1686409096332</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686409096332</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"tout bug corriger, manque juste buildRealisateurFromTxt\">\r\n      <created>1686412187478</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686412187478</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"buildrealisateurfromtxt test 1\">\r\n      <created>1686440898946</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686440898946</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"buildrealisateurfromtxt fonctionnel\">\r\n      <created>1686442757022</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686442757022</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"buildrealisateurfromtxt sauf le valgrind\">\r\n      <created>1686482679977</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686482679977</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"ajout des caractère &quot;'&quot; et ' '\">\r\n      <created>1686489948785</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686489948785</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"fin filmotheque.c\">\r\n      <created>1686497694864</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686497694864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"début list chrono\">\r\n      <created>1686508055884</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686508055884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"début list chrono\">\r\n      <created>1686508080676</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686508080676</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"20\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"fin de film\" />\r\n    <MESSAGE value=\"ajoue de deleteFilmByTitle\" />\r\n    <MESSAGE value=\"mise a jour des .h\" />\r\n    <MESSAGE value=\"beginning realisateur.c\" />\r\n    <MESSAGE value=\"ajout de printFilm dans film.h / .c\" />\r\n    <MESSAGE value=\"msj\" />\r\n    <MESSAGE value=\"correction addFirst film.c\" />\r\n    <MESSAGE value=\"fin correction de film.c\" />\r\n    <MESSAGE value=\"brouillons realisateur\" />\r\n    <MESSAGE value=\"fonction realisateur propre, changement de la structure film\" />\r\n    <MESSAGE value=\"tout bug corriger, manque juste buildRealisateurFromTxt\" />\r\n    <MESSAGE value=\"buildrealisateurfromtxt test 1\" />\r\n    <MESSAGE value=\"buildrealisateurfromtxt fonctionnel\" />\r\n    <MESSAGE value=\"buildrealisateurfromtxt sauf le valgrind\" />\r\n    <MESSAGE value=\"ajout des caractère &quot;'&quot; et ' '\" />\r\n    <MESSAGE value=\"fin filmotheque.c\" />\r\n    <MESSAGE value=\"début list chrono\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"début list chrono\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fbb4d16666e8e3439c3abeaa0afb61678928d6e0)
+++ b/.idea/workspace.xml	(date 1686553641297)
@@ -20,19 +20,14 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="98986d9e-6e12-4312-9b46-9dd440afb589" name="Changes" comment="début list chrono">
+    <list default="true" id="98986d9e-6e12-4312-9b46-9dd440afb589" name="Changes" comment="Toute fonction utile terminer, free aussi">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Realisateur.c" beforeDir="false" afterPath="$PROJECT_DIR$/Realisateur.c" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/C.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/C.includecache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.internal" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/depend.make" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/filmotheque.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/filmotheque.c.o" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/main.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/c.dir/main.c.o" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/c" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/filmotheque.c" beforeDir="false" afterPath="$PROJECT_DIR$/filmotheque.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/filmotheque.h" beforeDir="false" afterPath="$PROJECT_DIR$/filmotheque.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/listChrono.c" beforeDir="false" afterPath="$PROJECT_DIR$/listChrono.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/listChrono.h" beforeDir="false" afterPath="$PROJECT_DIR$/listChrono.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/main.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/test" beforeDir="false" afterPath="$PROJECT_DIR$/test" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -80,7 +75,7 @@
     "WebServerToolWindowFactoryState": "false",
     "cf.first.check.clang-format": "false",
     "cidr.known.project.marker": "true",
-    "last_opened_file_path": "C:/Users/vdron/Documents/Travail/algo/pratique/TP7_Dronne",
+    "last_opened_file_path": "C:/Users/vdron/Documents/Travail/algo/pratique/projet/projetCIR1_groupe_2/c",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
@@ -89,15 +84,16 @@
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
-  <component name="RunManager" selected="CMake Application.c">
-    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
+  <component name="RunManager" selected="C/C++ File.main.c (1)">
+    <configuration name="c" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="c" TARGET_NAME="c" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="c" RUN_TARGET_NAME="c">
       <method v="2">
-        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
-    <configuration name="c" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="c" TARGET_NAME="c" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="c" RUN_TARGET_NAME="c">
+    <configuration name="main.c (1)" type="CppFileRunConfiguration" factoryName="CppFileRunConfiguration" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="c" TARGET_NAME="main.c" CONFIG_NAME="main.c">
+      <option name="sourceFile" value="main.c" />
       <method v="2">
-        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+        <option name="com.jetbrains.cidr.cpp.runfile.CppFileBuildBeforeRunTaskProvider$BasicBuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
     <configuration name="main.c" type="CppFileRunConfiguration" factoryName="CppFileRunConfiguration" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="c" TARGET_NAME="main.c" CONFIG_NAME="main.c">
@@ -107,11 +103,13 @@
       </method>
     </configuration>
     <list>
+      <item itemvalue="C/C++ File.main.c (1)" />
       <item itemvalue="C/C++ File.main.c" />
       <item itemvalue="CMake Application.c" />
     </list>
     <recent_temporary>
       <list>
+        <item itemvalue="C/C++ File.main.c (1)" />
         <item itemvalue="C/C++ File.main.c" />
       </list>
     </recent_temporary>
@@ -132,7 +130,9 @@
       <workItem from="1686405910188" duration="4339000" />
       <workItem from="1686411048468" duration="14432000" />
       <workItem from="1686440869031" duration="3179000" />
-      <workItem from="1686477818245" duration="34136000" />
+      <workItem from="1686477818245" duration="34483000" />
+      <workItem from="1686553254351" duration="51000" />
+      <workItem from="1686553322220" duration="317000" />
     </task>
     <task id="LOCAL-00001" summary="fin de film">
       <created>1686303808802</created>
@@ -267,7 +267,14 @@
       <option name="project" value="LOCAL" />
       <updated>1686508080676</updated>
     </task>
-    <option name="localTasksCounter" value="20" />
+    <task id="LOCAL-00020" summary="Toute fonction utile terminer, free aussi">
+      <created>1686520669214</created>
+      <option name="number" value="00020" />
+      <option name="presentableId" value="LOCAL-00020" />
+      <option name="project" value="LOCAL" />
+      <updated>1686520669214</updated>
+    </task>
+    <option name="localTasksCounter" value="21" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -302,6 +309,7 @@
     <MESSAGE value="ajout des caractère &quot;'&quot; et ' '" />
     <MESSAGE value="fin filmotheque.c" />
     <MESSAGE value="début list chrono" />
-    <option name="LAST_COMMIT_MESSAGE" value="début list chrono" />
+    <MESSAGE value="Toute fonction utile terminer, free aussi" />
+    <option name="LAST_COMMIT_MESSAGE" value="Toute fonction utile terminer, free aussi" />
   </component>
 </project>
\ No newline at end of file
